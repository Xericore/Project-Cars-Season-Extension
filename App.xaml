<Application x:Class="ProjectCarsSeasonExtension.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProjectCarsSeasonExtension"
             xmlns:system="clr-namespace:System;assembly=mscorlib">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="MainBackgroundColor">White</SolidColorBrush>
            <FontWeight x:Key="MainFontWeight">Medium</FontWeight>
            <system:Double x:Key="MainFontSize">20</system:Double>

            <system:Double x:Key="PlayerNameTextWidth">240</system:Double>

            <Color x:Key="TabItemDisabledForegroundColor">#aaaaaa</Color>
            <SolidColorBrush x:Key="TabItemDisabledForegroundBrush" Color="{StaticResource TabItemDisabledForegroundColor}" />
            <SolidColorBrush x:Key="TabItemMouseOverForegroundBrush" Color="{DynamicResource Primary200}" />

            <Style x:Key="BodyContentDataGridCentering"
                   TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SelectedTabItem" TargetType="{x:Type Border}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="{DynamicResource Primary100}" Offset="0"/>
                            <GradientStop Color="White" Offset="0.35"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryHueMidBrush}" />
                <Setter Property="BorderThickness" Value="2,2,2,0" />
                <Setter Property="CornerRadius" Value="5" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style x:Key="DeselectedTabItem" TargetType="{x:Type Border}" BasedOn="{StaticResource SelectedTabItem}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItemDisabledForegroundBrush}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect" Value="{x:Null}" />
            </Style>

            <Style x:Key="MouseOverTabItem" TargetType="{x:Type Border}" BasedOn="{StaticResource SelectedTabItem}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItemMouseOverForegroundBrush}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Effect" Value="{x:Null}" />
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="Border" Margin="4,6,4,0" CornerRadius="10,10,0,0">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                      ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Style" Value="{StaticResource DeselectedTabItem}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TabItemDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Style" Value="{StaticResource MouseOverTabItem}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TabItemDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Style" Value="{StaticResource SelectedTabItem}"/>
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="MinWidth" Value="200"/>
                <Setter Property="Height" Value="80"/>
            </Style>
            
            <Style TargetType="{x:Type Image}">
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"></Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
